{"version":3,"sources":["Display.jsx","Settings.jsx","DataProvider.js","App.js","reportWebVitals.js","index.js"],"names":["ShowDate","useState","date","setDate","n","setN","monthNames","useEffect","setTimeout","t","Date","display","getDate","toPrecision","getMonth","className","convertTimestampToDisplayTime","unix_timestamp","String","getHours","padStart","getMinutes","ShowTime","props","state","time","tick","bind","this","getSeconds","setState","React","Component","CalendarItem","item","mode","now","orientation","start","finish","minutesRemaining","Math","floor","getTime","bgcolor","label","style","backgroundColor","CalendarItems","items","setNow","utc_timestamp","Array","isArray","map","v","i","Display","remaining","file","a","formData","FormData","append","axios","post","headers","then","response","console","log","data","Settings","setCalendar","calendarid","setCalendarid","pin","setPin","doUpload","e","uploadCalendar","document","querySelector","files","result","alert","for","name","type","onClick","value","onChange","target","DataProvider","url","packet","getCalendar","App","previousCalendar","w","window","screen","width","h","height","innerWidth","innerHeight","setScreenOrientation","addEventListener","ticktocker","setInterval","res","clearInterval","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.9c5e3551.chunk.js","sourcesContent":["import './App.css';\nimport React, { useEffect, useState } from 'react';\n\nfunction ShowDate() {\n    const [ date, setDate ] = useState(\"\");\n    const [ n, setN ] = useState(0);\n    const monthNames = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n\n    useEffect(()=>{\n        setTimeout(()=>{\n            let t = new Date();\n            let display = t.getDate().toPrecision(2) + \" \" + monthNames[t.getMonth()];\n            setDate( display );\n            setN( n+1 );\n        }, 1000);\n    }, []);\n\n    useEffect(()=>{\n        setTimeout(()=>{\n            let t = new Date();\n            let display = t.getDate().toPrecision(2) + \" \" + monthNames[t.getMonth()];\n            setDate( display );\n            setN( n+1 );\n        }, 60000);\n    }, [n]);\n\n    return (\n    <div className=\"date\">{date}</div>\n    )\n}\n\nfunction convertTimestampToDisplayTime(unix_timestamp) {\n    let t = new Date(unix_timestamp * 1000);\n    return String(t.getHours()).padStart(2,\"0\") + \":\" + String(t.getMinutes()).padStart(2,\"0\");\n}\n\nclass ShowTime extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {time: 0};\n        this.tick = this.tick.bind(this);\n    }\n    componentDidMount() {\n        this.tick();\n    }\n    tick() {\n        let t = new Date();\n        let display = String(t.getHours()).padStart(2,\"0\") + \":\" + String(t.getMinutes()).padStart(2,\"0\");\n        if (t.getSeconds() % 2 == 0) {\n            display = String(t.getHours()).padStart(2,\"0\") + \" \" + String(t.getMinutes()).padStart(2,\"0\");\n        }\n        this.setState({time: display});\n    }\n    componentDidUpdate() {\n        setTimeout(()=>this.tick(), 1000);\n    }\n    componentWillUnmount() {\n    }\n    render() {\n        if (! this.state.time) return (<div/>)\n        return(\n            <div className=\"time\">{this.state.time}</div>\n        )\n    }\n}\n\nfunction CalendarItem({item, mode, now}) {\n    let orientation = (mode == \"portrait\") ? \"calendaritem_portrait\" : \"calendaritem_landscape\";\n    let start = new Date(item['start-utc-timestamp'] * 1000);\n    let finish = new Date(item['finish-utc-timestamp'] * 1000);\n    if (now >= start && now <= finish) { // Event is currently in progress\n        let minutesRemaining = Math.floor(finish.getTime()/60000 - now.getTime()/60000);\n        let bgcolor = \"#32a84a\"; // green\n        if (minutesRemaining <= 5) {\n            bgcolor = \"#ff0000\"; // red\n        } else if (minutesRemaining <= 10) {\n            bgcolor = \"#ff7700\" // deep orange \n        } else if (minutesRemaining <= 15) {\n            bgcolor = \"#ffa600\"; // light orange\n        }\n        return(\n            <div className={\"calendaritem \"+orientation}>\n                <div className=\"calendaritem_name\">{item.label}</div>\n                <div className=\"calendaritem_start\">{convertTimestampToDisplayTime(item['start-utc-timestamp'])}</div>\n                <div className=\"calendaritem_finish\">{convertTimestampToDisplayTime(item['finish-utc-timestamp'])}</div>\n                <div className=\"calendaritem_countdown countdown\"  style={{backgroundColor: bgcolor}}>{minutesRemaining}</div>\n            </div>\n        )\n    } else if (now <= start) { // Event has not yet started\n        return(\n            <div className={\"calendaritem \"+orientation}>\n                <div className=\"calendaritem_name\">{item.label}</div>\n                <div className=\"calendaritem_start\">{convertTimestampToDisplayTime(item['start-utc-timestamp'])}</div>\n                <div className=\"calendaritem_finish\">{convertTimestampToDisplayTime(item['finish-utc-timestamp'])}</div>\n            </div>\n        )\n    } else { // Event has concluded\n        return(<div style={{display:\"none\"}} />)\n    }\n}\n\nfunction CalendarItems({items, mode}) {\n    const [ now, setNow ] = useState(new Date());\n    useEffect(()=>{\n        setTimeout(()=>{\n            setNow(new Date())\n        }, 1000);\n    }, [now]);\n    let utc_timestamp = Math.floor((new Date()).getTime() / 1000);\n    if (! Array.isArray(items)) {\n        return (<div/>)\n    }\n    return (\n    <div className=\"calendaritems\">\n        { items.map((v, i)=>{\n            // If the finish time is in the future\n            if (utc_timestamp < v['finish-utc-timestamp']) {\n                // If the start time is less than 24 hours away\n                if ((utc_timestamp+24*60*60) > v['start-utc-timestamp']) {\n                    return( <CalendarItem key={i} item={v} mode={mode} now={now}/> )\n                }\n                //if ((utc_timestamp+40*60*60) > v['start-utc-timestamp']) {\n                //    console.log((utc_timestamp+24*60*60), v);\n                //}\n            }\n        })}\n    </div>\n    )\n}\n\nclass Display extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { remaining: 20 };\n        //this.ticktock = this.ticktock.bind(this);\n    }\n\n    componentDidMount() {\n    }\n\n    componentWillUnmount() {\n    }\n\n    render() {\n        if (this.props.mode===\"landscape\") {\n        return (\n            <div className=\"landscape\">\n                <ShowDate/>\n                <ShowTime/>\n                <CalendarItems items={this.props.items} mode=\"landscape\"/>\n            </div>\n        )\n        } else {\n        return (\n            <div className=\"portrait\">\n                <ShowDate/>\n                <ShowTime/>\n                <CalendarItems items={this.props.items} mode=\"portrait\"/>\n            </div>\n        )\n        }\n    }\n}\n\nexport default Display;\n","import axios from 'axios';\nimport { useState, useEffect } from 'react';\n\nasync function uploadCalendar(file) {\n    /* Upload the CSV file via a Form with <input type=\"file\" name=\"file\"> */ \n    let formData = new FormData();\n    formData.append(\"file\", file);\n    return await axios.post(\"/set_calendar\", formData, {\n        headers: {\n            'Content-Type': 'multipart/form-data'\n        }\n    })\n    .then((response) => {\n        console.log(\"uploadCalendar res\", response);\n        return response.data \n    })\n}\n\n\nfunction Settings({setCalendar}) {\n    const [ calendarid, setCalendarid ] = useState('');\n    const [ pin, setPin ] = useState('');\n\n    function doUpload(e) {\n        let f = document.querySelector(\"input[name='calendarfile']\");\n        uploadCalendar(f.files[0])\n        .then((result)=>{\n            if (result && result['calendarid'] && result['pin'] ) {\n                alert(\"Calendar successfully imported. To access this calendar in the future use\\ncalendarid: \"+result['calendarid']+\"\\npin: \"+result['pin']+\"\\n\\nPlease record these values.\");\n                setCalendar(result['calendarid'], result['pin']);\n            } else {\n                alert(\"Error importing the calendar\")\n            }\n        })\n    }\n\n    function doLoad(e) {\n        setCalendar(calendarid, pin);\n    }\n\n    return(\n        <div>\n            <fieldset>\n                <legend>Upload new calendar</legend>\n                <label for=\"calendarfile\">Upload an .ical file</label>\n                <input name=\"calendarfile\" type=\"file\"/>\n                <input name=\"upload\" type=\"button\" onClick={(e)=>doUpload()} value=\"Upload\"/>\n            </fieldset>\n            <div>&nbsp;</div>\n            <div>&nbsp;</div>\n            <fieldset>\n                <legend>Open existing calendar</legend>\n                <label for=\"calendarid\">Calendar ID</label>\n                <input name=\"calendarid\" type=\"text\" value={calendarid} onChange={(e)=>setCalendarid(e.target.value)}/>\n                <label for=\"calendarid\">PIN code</label>\n                <input name=\"pin\" type=\"password\" value={pin} onChange={(e)=>setPin(e.target.value)}/>\n                <input name=\"load\" type=\"button\" onClick={(e)=>doLoad()} value=\"Load\"/>\n            </fieldset>\n        </div>\n    )\n}\nexport default Settings;\n\n","import axios from 'axios';\n\nclass DataProvider {\n    constructor() {\n        this.url = \"\"; // Not needed for now.\n    }\n\n    async getCalendar(calendarid, pin) {\n        let packet = {calendarid: calendarid, pin:pin}\n        return await axios.post(this.url+\"/get_calendar\", packet)\n        .then((response) => { return response.data })\n    }\n\n    async setCalendar(calendarid, pin, file) {\n        let packet = {calendarid: calendarid, pin:pin}\n        /* Upload the file via a Form with <input type=\"file\" name=\"file\"> */ \n        let formData = new FormData();\n        formData.append(\"file\", file);\n        formData.append(\"calendarid\", calendarid);\n        formData.append(\"pin\", pin);\n        return await axios.post(this.url+\"/set_calendar\", formData, {\n            headers: {\n              'Content-Type': 'multipart/form-data'\n            }\n        })\n        .then((response) => {\n            console.log(\"DataProvider/setCalendar res\", response);\n            return response.data \n        })\n    }\n}\n\nexport default DataProvider;\n\n","import React, { setState } from 'react';\nimport './App.css';\nimport Display from './Display';\nimport Settings from './Settings';\nimport axios from 'axios';\nimport DataProvider from './DataProvider';\n\nasync function getCalendar(calendarid, pin) {\n    let packet = {calendarid: calendarid, pin:pin}\n    return await axios.post(\"/get_calendar\", packet)\n    .then((response) => { return response.data })\n}\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { calendarid: '', \n            pin: '', \n            previousCalendar: '',\n            data: null, \n            mode: \"display\",\n            w: window.screen.width, \n            h: window.screen.height,\n            orientation: (window.innerWidth > window.innerHeight) ? \"landscape\" : \"portrait\" \n        }\n        this.data = new DataProvider();\n        this.setScreenOrientation = this.setScreenOrientation.bind(this);\n        this.setCalendar = this.setCalendar.bind(this);\n        // this.handleChange = this.handleChange.bind(this);\n    }\n\n    setScreenOrientation() {\n        this.setState({\n            w: window.screen.width, \n            h: window.screen.height,\n            orientation: (window.innerWidth > window.innerHeight) ? \"landscape\" : \"portrait\" \n        })\n    }\n\n    componentDidMount() {\n        window.addEventListener(\"resize\", () => this.setScreenOrientation());\n        this.ticktocker = setInterval(()=>{\n            getCalendar(this.state.calendarid, this.state.pin)\n            .then((res) => {\n                if (res && res['data']) {\n                    this.setState({data: res['data'], previousCalendar: this.state.calendarid});\n                }\n            })\n        }, 3600000); // Every hour query the server for updates\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.ticktocker);\n    }\n\n    componentDidUpdate() {\n        // Load the requested calendar\n        if (this.state.calendarid !== '' && this.state.pin !== '' && \n            (this.state.calendarid !== this.state.previousCalendar || this.state.previousCalendar === '')) \n            {\n            getCalendar(this.state.calendarid, this.state.pin)\n            .then((res) => {\n                if (res && res['data']) {\n                    this.setState({data: res['data'], previousCalendar: this.state.calendarid});\n                }\n            })\n        }\n        // Organise the data to display\n    }\n\n    setCalendar(calendarid, pin) {\n        this.setState({calendarid: calendarid, pin: pin, previousCalendar:''});\n    }\n\n    /*\n    this.state.data is an array of these.....\n        {\n            finish-utc-string: \"2021-08-25 08:25\"\n            finish-utc-timestamp: 1629851100\n            label: \"12X2\"\n            start-utc-string: \"2021-08-25 08:15\"\n            start-utc-timestamp: 1629850500\n            summary: \"12X2\"\n        }\n    */\n    \n    render() {\n        console.log(this.state.calendarid);\n        if (this.state.calendarid === '') {\n            return ( <Settings setCalendar={this.setCalendar}/> )\n        } else if (this.state.mode === \"display\" && this.state.orientation === \"landscape\") {\n            return ( <Display mode=\"landscape\" items={this.state.data} /> );\n        } else if (this.state.mode === \"display\" && this.state.orientation === \"portrait\") {\n            return ( <Display mode=\"portrait\" items={this.state.data} /> )\n        } else {\n            return ( <Settings setCalendar={this.setCalendar}/> )\n        }\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}